[{"E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"1","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\admin\\product\\ProductCreate.js":"2"},{"size":4483,"mtime":1607331305136,"results":"3","hashOfConfig":"4"},{"size":3056,"mtime":1607331324280,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"gzlml8",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["12","13"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProduct, updateProduct } from \"../../../functions/product\";\r\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\r\n\r\nconst initialState = {\r\n\ttitle: \"\",\r\n\tdescription: \"\",\r\n\tprice: \"\",\r\n\tcategory: \"\",\r\n\tsubs: [],\r\n\tshipping: \"\",\r\n\tquantity: \"\",\r\n\timages: [],\r\n\tcolors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n\tbrands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\",\"Acer\"],\r\n\tcolor: \"\",\r\n\tbrand: \"\",\r\n};\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n\t// state\r\n\tconst [values, setValues] = useState(initialState);\r\n\tconst [categories, setCategories] = useState([]);\r\n\tconst [subOptions, setSubOptions] = useState([]);\r\n\tconst [arrayOfSubs, setArrayOfSubs] = useState([]);\r\n\tconst [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst { user } = useSelector((state) => ({ ...state }));\r\n\t// router\r\n\tconst { slug } = match.params;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadProduct();\r\n\t\tloadCategories();\r\n\t}, []);\r\n\r\n\tconst loadProduct = () => {\r\n\t\tgetProduct(slug).then((p) => {\r\n\t\t\t// console.log(\"single product\", p);\r\n\t\t\t// 1 load single proudct\r\n\t\t\tsetValues({ ...values, ...p.data });\r\n\t\t\t// 2 load single product category subs\r\n\t\t\tgetCategorySubs(p.data.category._id).then((res) => {\r\n\t\t\t\tsetSubOptions(res.data); // on first load, show default subs\r\n\t\t\t});\r\n\t\t\t// 3 prepare array of sub ids to show as default sub values in antd Select\r\n\t\t\tlet arr = [];\r\n\t\t\tp.data.subs.map((s) => {\r\n\t\t\t\tarr.push(s._id);\r\n\t\t\t});\r\n\t\t\tconsole.log(\"ARR\", arr);\r\n\t\t\tsetArrayOfSubs((prev) => arr); // required for ant design select to work\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadCategories = () =>\r\n\t\tgetCategories().then((c) => {\r\n\t\t\t// console.log(\"GET CATEGORIES IN UPDATE PRODUCT\", c.data);\r\n\t\t\tsetCategories(c.data);\r\n\t\t});\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetLoading(true);\r\n\r\n\t\tvalues.subs = arrayOfSubs;\r\n\t\tvalues.category = selectedCategory ? selectedCategory : values.category;\r\n\r\n\t\tupdateProduct(slug, values, user.token)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\ttoast.success(`\"${res.data.title}\" is updated`);\r\n\t\t\t\thistory.push(\"/admin/products\");\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\ttoast.error(err.response.data.err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetValues({ ...values, [e.target.name]: e.target.value });\r\n\t\t// console.log(e.target.name, \" ----- \", e.target.value);\r\n\t};\r\n\r\n\tconst handleCategoryChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// console.log(\"CLICKED CATEGORY\", e.target.value);\r\n\t\tsetValues({ ...values, subs: [] });\r\n\r\n\t\tsetSelectedCategory(e.target.value);\r\n\r\n\t\tgetCategorySubs(e.target.value).then((res) => {\r\n\t\t\t// console.log(\"SUB OPTIONS ON CATGORY CLICK\", res);\r\n\t\t\tsetSubOptions(res.data);\r\n\t\t});\r\n\r\n\t\t// console.log(\"EXISTING CATEGORY values.category\", values.category);\r\n\r\n\t\t// if user clicks back to the original category\r\n\t\t// show its sub categories in default\r\n\t\tif (values.category._id === e.target.value) {\r\n\t\t\tloadProduct();\r\n\t\t}\r\n\t\t// clear old sub category ids\r\n\t\tsetArrayOfSubs([]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<AdminNav />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<LoadingOutlined className=\"text-danger h1\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h4>Product update</h4>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* {JSON.stringify(values)} */}\r\n\r\n\t\t\t\t\t<div className=\"p-3\">\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\tsetValues={setValues}\r\n\t\t\t\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ProductUpdateForm\r\n\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\tsetValues={setValues}\r\n\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\thandleCategoryChange={handleCategoryChange}\r\n\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\tsubOptions={subOptions}\r\n\t\t\t\t\t\tarrayOfSubs={arrayOfSubs}\r\n\t\t\t\t\t\tsetArrayOfSubs={setArrayOfSubs}\r\n\t\t\t\t\t\tselectedCategory={selectedCategory}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProductUpdate;\r\n","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\admin\\product\\ProductCreate.js",["14"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { createProduct } from '../../../functions/product';\r\nimport ProductCreateForm from '../../../components/forms/ProductCreateForm';\r\nimport { getCategories, getCategorySubs } from '../../../functions/category';\r\nimport FileUpload from './../../../components/forms/FileUpload';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst initialState = {\r\n\ttitle: '',\r\n\tdescription: '',\r\n\tprice: '',\r\n\tcategories: [],\r\n\tcategory: '',\r\n\tsubs: [],\r\n\tshipping: '',\r\n\tquantity: '',\r\n\timages: [],\r\n\tcolors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n\tbrands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS', 'Acer'],\r\n\tcolor: '',\r\n\tbrand: '',\r\n};\r\n\r\nconst ProductCreate = () => {\r\n\tconst [values, setValues] = useState(initialState);\r\n\tconst [subOptions, setSubOptions] = useState([]);\r\n\tconst [showSub, setShowSub] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\t// redux\r\n\tconst { user } = useSelector((state) => ({ ...state }));\r\n\r\n\tuseEffect(() => {\r\n\t\tloadCategories();\r\n\t}, []);\r\n\r\n\tconst loadCategories = () =>\r\n\t\tgetCategories().then((c) => setValues({ ...values, categories: c.data }));\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tcreateProduct(values, user.token)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\twindow.alert(`\"${res.data.title}\" is created`);\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t// if (err.response.status === 400) toast.error(err.response.data);\r\n\t\t\t\ttoast.error(err.response.data.err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetValues({ ...values, [e.target.name]: e.target.value });\r\n\t\t// console.log(e.target.name, \" ----- \", e.target.value);\r\n\t};\r\n\r\n\tconst handleCatagoryChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// console.log('CLICKED CATEGORY', e.target.value);\r\n\t\tsetValues({ ...values, subs: [], category: e.target.value });\r\n\t\tgetCategorySubs(e.target.value).then((res) => {\r\n\t\t\t// console.log('SUB OPTIONS ON CATGORY CLICK', res);\r\n\t\t\tsetSubOptions(res.data);\r\n\t\t});\r\n\t\tsetShowSub(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<AdminNav />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<LoadingOutlined className=\"text-danger h1\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<h4>Product create</h4>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t<div className=\"p-3\">\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\tsetValues={setValues}\r\n\t\t\t\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ProductCreateForm\r\n\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\tsetValues={setValues}\r\n\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\thandleCatagoryChange={handleCatagoryChange}\r\n\t\t\t\t\t\tsubOptions={subOptions}\r\n\t\t\t\t\t\tshowSub={showSub}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProductCreate;\r\n",{"ruleId":"15","severity":1,"message":"16","line":42,"column":5,"nodeType":"17","endLine":42,"endColumn":7,"suggestions":"18"},{"ruleId":"19","severity":1,"message":"20","line":55,"column":24,"nodeType":"21","messageId":"22","endLine":55,"endColumn":26},{"ruleId":"15","severity":1,"message":"23","line":38,"column":5,"nodeType":"17","endLine":38,"endColumn":7,"suggestions":"24"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.","ArrayExpression",["25"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["26"],{"desc":"27","fix":"28"},{"desc":"29","fix":"30"},"Update the dependencies array to be: [loadProduct]",{"range":"31","text":"32"},"Update the dependencies array to be: [loadCategories]",{"range":"33","text":"34"},[1404,1406],"[loadProduct]",[1211,1213],"[loadCategories]"]