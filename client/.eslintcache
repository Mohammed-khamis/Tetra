[{"E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"1","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\admin\\product\\ProductCreate.js":"2","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\auth\\Login.js":"3","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\components\\modal\\RatingModal.js":"4","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\Product.js":"5","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\functions\\rating.js":"6","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\components\\cards\\SingleProduct.js":"7","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\components\\cards\\ProductCard.js":"8","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\functions\\product.js":"9"},{"size":4483,"mtime":1607331305136,"results":"10","hashOfConfig":"11"},{"size":3056,"mtime":1607331324280,"results":"12","hashOfConfig":"11"},{"size":4791,"mtime":1607345354897,"results":"13","hashOfConfig":"11"},{"size":1501,"mtime":1607345354895,"results":"14","hashOfConfig":"11"},{"size":2055,"mtime":1607348835997,"results":"15","hashOfConfig":"11"},{"size":1115,"mtime":1607345443654,"results":"16","hashOfConfig":"11"},{"size":2197,"mtime":1607347560816,"results":"17","hashOfConfig":"11"},{"size":1209,"mtime":1607347823144,"results":"18","hashOfConfig":"11"},{"size":1405,"mtime":1607348561365,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"gzlml8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["43","44"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProduct, updateProduct } from \"../../../functions/product\";\r\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\r\n\r\nconst initialState = {\r\n\ttitle: \"\",\r\n\tdescription: \"\",\r\n\tprice: \"\",\r\n\tcategory: \"\",\r\n\tsubs: [],\r\n\tshipping: \"\",\r\n\tquantity: \"\",\r\n\timages: [],\r\n\tcolors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n\tbrands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\",\"Acer\"],\r\n\tcolor: \"\",\r\n\tbrand: \"\",\r\n};\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n\t// state\r\n\tconst [values, setValues] = useState(initialState);\r\n\tconst [categories, setCategories] = useState([]);\r\n\tconst [subOptions, setSubOptions] = useState([]);\r\n\tconst [arrayOfSubs, setArrayOfSubs] = useState([]);\r\n\tconst [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst { user } = useSelector((state) => ({ ...state }));\r\n\t// router\r\n\tconst { slug } = match.params;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadProduct();\r\n\t\tloadCategories();\r\n\t}, []);\r\n\r\n\tconst loadProduct = () => {\r\n\t\tgetProduct(slug).then((p) => {\r\n\t\t\t// console.log(\"single product\", p);\r\n\t\t\t// 1 load single proudct\r\n\t\t\tsetValues({ ...values, ...p.data });\r\n\t\t\t// 2 load single product category subs\r\n\t\t\tgetCategorySubs(p.data.category._id).then((res) => {\r\n\t\t\t\tsetSubOptions(res.data); // on first load, show default subs\r\n\t\t\t});\r\n\t\t\t// 3 prepare array of sub ids to show as default sub values in antd Select\r\n\t\t\tlet arr = [];\r\n\t\t\tp.data.subs.map((s) => {\r\n\t\t\t\tarr.push(s._id);\r\n\t\t\t});\r\n\t\t\tconsole.log(\"ARR\", arr);\r\n\t\t\tsetArrayOfSubs((prev) => arr); // required for ant design select to work\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadCategories = () =>\r\n\t\tgetCategories().then((c) => {\r\n\t\t\t// console.log(\"GET CATEGORIES IN UPDATE PRODUCT\", c.data);\r\n\t\t\tsetCategories(c.data);\r\n\t\t});\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetLoading(true);\r\n\r\n\t\tvalues.subs = arrayOfSubs;\r\n\t\tvalues.category = selectedCategory ? selectedCategory : values.category;\r\n\r\n\t\tupdateProduct(slug, values, user.token)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\ttoast.success(`\"${res.data.title}\" is updated`);\r\n\t\t\t\thistory.push(\"/admin/products\");\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\ttoast.error(err.response.data.err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetValues({ ...values, [e.target.name]: e.target.value });\r\n\t\t// console.log(e.target.name, \" ----- \", e.target.value);\r\n\t};\r\n\r\n\tconst handleCategoryChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// console.log(\"CLICKED CATEGORY\", e.target.value);\r\n\t\tsetValues({ ...values, subs: [] });\r\n\r\n\t\tsetSelectedCategory(e.target.value);\r\n\r\n\t\tgetCategorySubs(e.target.value).then((res) => {\r\n\t\t\t// console.log(\"SUB OPTIONS ON CATGORY CLICK\", res);\r\n\t\t\tsetSubOptions(res.data);\r\n\t\t});\r\n\r\n\t\t// console.log(\"EXISTING CATEGORY values.category\", values.category);\r\n\r\n\t\t// if user clicks back to the original category\r\n\t\t// show its sub categories in default\r\n\t\tif (values.category._id === e.target.value) {\r\n\t\t\tloadProduct();\r\n\t\t}\r\n\t\t// clear old sub category ids\r\n\t\tsetArrayOfSubs([]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<AdminNav />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<LoadingOutlined className=\"text-danger h1\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h4>Product update</h4>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* {JSON.stringify(values)} */}\r\n\r\n\t\t\t\t\t<div className=\"p-3\">\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\tsetValues={setValues}\r\n\t\t\t\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ProductUpdateForm\r\n\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\tsetValues={setValues}\r\n\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\thandleCategoryChange={handleCategoryChange}\r\n\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\tsubOptions={subOptions}\r\n\t\t\t\t\t\tarrayOfSubs={arrayOfSubs}\r\n\t\t\t\t\t\tsetArrayOfSubs={setArrayOfSubs}\r\n\t\t\t\t\t\tselectedCategory={selectedCategory}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProductUpdate;\r\n","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\admin\\product\\ProductCreate.js",["45"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { createProduct } from '../../../functions/product';\r\nimport ProductCreateForm from '../../../components/forms/ProductCreateForm';\r\nimport { getCategories, getCategorySubs } from '../../../functions/category';\r\nimport FileUpload from './../../../components/forms/FileUpload';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst initialState = {\r\n\ttitle: '',\r\n\tdescription: '',\r\n\tprice: '',\r\n\tcategories: [],\r\n\tcategory: '',\r\n\tsubs: [],\r\n\tshipping: '',\r\n\tquantity: '',\r\n\timages: [],\r\n\tcolors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n\tbrands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS', 'Acer'],\r\n\tcolor: '',\r\n\tbrand: '',\r\n};\r\n\r\nconst ProductCreate = () => {\r\n\tconst [values, setValues] = useState(initialState);\r\n\tconst [subOptions, setSubOptions] = useState([]);\r\n\tconst [showSub, setShowSub] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\t// redux\r\n\tconst { user } = useSelector((state) => ({ ...state }));\r\n\r\n\tuseEffect(() => {\r\n\t\tloadCategories();\r\n\t}, []);\r\n\r\n\tconst loadCategories = () =>\r\n\t\tgetCategories().then((c) => setValues({ ...values, categories: c.data }));\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tcreateProduct(values, user.token)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\twindow.alert(`\"${res.data.title}\" is created`);\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t// if (err.response.status === 400) toast.error(err.response.data);\r\n\t\t\t\ttoast.error(err.response.data.err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetValues({ ...values, [e.target.name]: e.target.value });\r\n\t\t// console.log(e.target.name, \" ----- \", e.target.value);\r\n\t};\r\n\r\n\tconst handleCatagoryChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// console.log('CLICKED CATEGORY', e.target.value);\r\n\t\tsetValues({ ...values, subs: [], category: e.target.value });\r\n\t\tgetCategorySubs(e.target.value).then((res) => {\r\n\t\t\t// console.log('SUB OPTIONS ON CATGORY CLICK', res);\r\n\t\t\tsetSubOptions(res.data);\r\n\t\t});\r\n\t\tsetShowSub(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<AdminNav />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<LoadingOutlined className=\"text-danger h1\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<h4>Product create</h4>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t<div className=\"p-3\">\r\n\t\t\t\t\t\t<FileUpload\r\n\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\tsetValues={setValues}\r\n\t\t\t\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ProductCreateForm\r\n\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\tsetValues={setValues}\r\n\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\thandleCatagoryChange={handleCatagoryChange}\r\n\t\t\t\t\t\tsubOptions={subOptions}\r\n\t\t\t\t\t\tshowSub={showSub}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProductCreate;\r\n","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\auth\\Login.js",[],"E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\components\\modal\\RatingModal.js",["46"],"E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\pages\\Product.js",["47","48"],"import React, { useEffect, useState } from \"react\";\r\nimport { getProduct, productStar } from \"../functions/product\";\r\nimport SingleProduct from \"../components/cards/SingleProduct\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getRelated } from \"../functions/product\";\r\nimport ProductCard from \"../components/cards/ProductCard\";\r\n\r\nconst Product = ({ match }) => {\r\n\tconst [product, setProduct] = useState({});\r\n\tconst [related, setRelated] = useState([]);\r\n\tconst [star, setStar] = useState(0);\r\n\t// redux\r\n\tconst { user } = useSelector((state) => ({ ...state }));\r\n\r\n\tconst { slug } = match.params;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadSingleProduct();\r\n\t}, [slug]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (product.ratings && user) {\r\n\t\t\tlet existingRatingObject = product.ratings.find(\r\n\t\t\t\t(ele) => ele.postedBy.toString() === user._id.toString()\r\n\t\t\t);\r\n\t\t\texistingRatingObject && setStar(existingRatingObject.star);\r\n\t\t}\r\n\t});\r\n\r\n\tconst loadSingleProduct = () => {\r\n\t\tgetProduct(slug).then((res) => {\r\n\t\t\tsetProduct(res.data);\r\n\t\t\t// load related\r\n\t\t\tgetRelated(res.data._id).then((res) => setRelated(res.data));\r\n\t\t});\r\n\t};\r\n\r\n\tconst onStarClick = (newRating, name) => {\r\n\t\tsetStar(newRating);\r\n\t\t// console.table(newRating, name);\r\n\t\tproductStar(name, newRating, user.token).then((res) => {\r\n\t\t\t// console.log(\"rating clicked\", res.data);\r\n\t\t\tloadSingleProduct();\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row pt-4\">\r\n\t\t\t\t<SingleProduct\r\n\t\t\t\t\tproduct={product}\r\n\t\t\t\t\tonStarClick={onStarClick}\r\n\t\t\t\t\tstar={star}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col text-center pt-5 pb-5\">\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<h4>Related Products</h4>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row pb-5\">\r\n\t\t\t\t{related.length ? (\r\n\t\t\t\t\trelated.map((r) => (\r\n\t\t\t\t\t\t<div key={r._id} className=\"col-md-4\">\r\n\t\t\t\t\t\t\t<ProductCard product={r} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"text-center col\">No Products Found</div>\r\n\t\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Product;\r\n","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\functions\\rating.js",[],"E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\components\\cards\\SingleProduct.js",["49","50"],"import React from 'react';\r\nimport { Card, Tabs } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HeartOutlined, ShoppingCartOutlined } from '@ant-design/icons';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport NoImage from '../../images/No-image-available.png';\r\nimport ProductListItems from './ProductListItems';\r\nimport StarRating from \"react-star-ratings\";\r\nimport RatingModal from \"../modal/RatingModal\";\r\nimport { showAverage } from '../../functions/rating';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst SingleProduct = ({ product, onStarClick, star }) => {\r\n\tconst { title, images, discription, _id } = product;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"col-md-7\">\r\n\t\t\t\t{images && images.length ? (\r\n\t\t\t\t\t<Carousel showArrows={true} autoPlay infiniteLoop>\r\n\t\t\t\t\t\t{images && images.map((i) => <img src={i.url} key={i.public_id} />)}\r\n\t\t\t\t\t</Carousel>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tcover={<img src={NoImage} className=\"mb-3 card-image\" />}\r\n\t\t\t\t\t\t></Card>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t<Tabs type=\"card\">\r\n\t\t\t\t\t<TabPane tab=\"Description\" key=\"1\">\r\n\t\t\t\t\t\t{discription && discription}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"More\" key=\"2\">\r\n\t\t\t\t\t\tCall us on 8984565465 to learn more about this product.\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t<h1 className=\"bg-info p-3\">{title}</h1>\r\n\r\n\t\t\t\t{product && product.ratings && product.ratings.length > 0 ? (\r\n\t\t\t\t\tshowAverage(product)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"text-center pt-1 pb-3\">No rating yet</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t<Card\r\n\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined className=\"text-success\" /> <br />\r\n\t\t\t\t\t  Add to Cart\r\n\t\t\t\t\t</>,\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<HeartOutlined className=\"text-info\" /> <br /> Add to Wishlist\r\n\t\t\t\t\t</Link>,\r\n\t\t\t\t\t\t<RatingModal>\r\n\t\t\t\t\t\t\t<StarRating\r\n\t\t\t\t\t\t\t\tname={_id}\r\n\t\t\t\t\t\t\t\tnumberOfStars={5}\r\n\t\t\t\t\t\t\t\trating={star}\r\n\t\t\t\t\t\t\t\tchangeRating={onStarClick}\r\n\t\t\t\t\t\t\t\tisSelectable={true}\r\n\t\t\t\t\t\t\t\tstarRatedColor=\"red\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RatingModal>,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ProductListItems product={product} />\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SingleProduct;\r\n","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\components\\cards\\ProductCard.js",["51"],"import React from 'react';\r\nimport { Card } from 'antd';\r\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport NoImage from '../../images/No-image-available.png';\r\nimport { showAverage } from \"../../functions/rating\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ProductCard = ({ product }) => {\r\n\tconst { title, description, images, slug } = product;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{product && product.ratings && product.ratings.length > 0 ? (\r\n\t\t\t\tshowAverage(product)\r\n\t\t\t) : (\r\n\t\t\t\t\t<div className=\"text-center pt-1 pb-3\">No rating yet</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t<Card\r\n\t\t\t\tcover={\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={images && images.length ? images[0].url : NoImage}\r\n\t\t\t\t\t\tstyle={{ height: \"150px\", objectFit: \"cover\" }}\r\n\t\t\t\t\t\tclassName=\"p-1\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tactions={[\r\n\t\t\t\t\t<Link to={`/product/${slug}`}>\r\n\t\t\t\t\t\t<EyeOutlined className=\"text-warning\" /> <br /> View Product\r\n\t\t\t</Link>,\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ShoppingCartOutlined className=\"text-danger\" /> <br /> Add to Cart\r\n\t\t\t</>,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Meta\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tdescription={`${description && description.substring(0, 40)}...`}\r\n\t\t\t\t/>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProductCard;\r\n","E:\\JCA\\projects\\New folder\\Tetra\\client\\src\\functions\\product.js",[],{"ruleId":"52","severity":1,"message":"53","line":42,"column":5,"nodeType":"54","endLine":42,"endColumn":7,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":55,"column":24,"nodeType":"58","messageId":"59","endLine":55,"endColumn":26},{"ruleId":"52","severity":1,"message":"60","line":38,"column":5,"nodeType":"54","endLine":38,"endColumn":7,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":17,"nodeType":"64","messageId":"65","endLine":2,"endColumn":23},{"ruleId":"52","severity":1,"message":"66","line":19,"column":5,"nodeType":"54","endLine":19,"endColumn":11,"suggestions":"67"},{"ruleId":"52","severity":1,"message":"68","line":21,"column":2,"nodeType":"64","endLine":21,"endColumn":11,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":23,"column":36,"nodeType":"72","endLine":23,"endColumn":73},{"ruleId":"70","severity":1,"message":"71","line":27,"column":15,"nodeType":"72","endLine":27,"endColumn":64},{"ruleId":"70","severity":1,"message":"71","line":23,"column":6,"nodeType":"72","endLine":27,"endColumn":8},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.","ArrayExpression",["73"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["74"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["75"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [product.ratings, user] as a second argument to the useEffect Hook.",["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [loadProduct]",{"range":"85","text":"86"},"Update the dependencies array to be: [loadCategories]",{"range":"87","text":"88"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"89","text":"90"},"Add dependencies array: [product.ratings, user]",{"range":"91","text":"92"},[1404,1406],"[loadProduct]",[1211,1213],"[loadCategories]",[660,666],"[loadSingleProduct, slug]",[919,919],", [product.ratings, user]"]